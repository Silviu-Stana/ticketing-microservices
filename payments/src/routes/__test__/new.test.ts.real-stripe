//ALTERNATIVE: same as above test, but reach real Stripe api, without a mock
//(make sure to rename the mock file)
//This option requires to store your STRIPE_KEY as a local environment variable
// it('returns a 201 with valid inputs', async () => {
//     const userId = new mongoose.Types.ObjectId().toHexString();
//     const price = Math.floor(Math.random() * 100000);
//     const order = Order.build({
//         id: new mongoose.Types.ObjectId().toHexString(),
//         version: 0,
//         userId: userId,
//         price: price,
//         status: OrderStatus.Created,
//     });
//     await order.save();

//     await request(app)
//         .post('/api/payments')
//         .set('Cookie', global.signin(userId))
//         .send({
//             token: 'tok_visa',
//             orderId: order.id,
//         })
//         .expect(201);

//     const stripeCharges = await stripe.charges.list({ limit: 50 });
//     const stripeCharge = stripeCharges.data.find((charge) => {
//         return charge.amount === price * 100;
//     });

//     expect(stripeCharge).toBeDefined();
//     expect(stripeCharge!.currency).toEqual('usd');
// });
